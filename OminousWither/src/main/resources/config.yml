###############################
#    OMINOUS WITHER CONFIG    #
###############################


############################
#    BOSS STATS SECTION    #
############################

# This is a collection of different settings that pertain to the Ominous Wither's stats
# These values essentially control how strong it is and how strong each of its moves are
# 
# Each setting has one required component: `formula`, a string
#   This is a mathematical expression to determine the value of the stat. 
#   This expression can use the variables `level` and `difficulty`, but doesn't have to.
#   - `level` refers to the level of an Ominous Wither, or equivalently: the level of Bad Omen used when spawning the Ominous Wither. This value is in the interval [1,5]
#   - `difficulty` refers to the Difficulty of the world that the Wither is in. The mapping is {Easy: 1, Normal: 2, Hard: 3}. Peaceful is disregarded since Withers can't exist in that mode.
#   Not using a variable will simply make the stat constant across all different assignments of that variable.
#   The system uses boxbeam's Crunch package, found here: https://github.com/boxbeam/Crunch
# 
#   Here is an example using a non-existent stat called "wither_power"
#     wither_power:
#       formula: "(level * 2) - 1"
#   The resulting "wither_power" values for Ominous Withers level 1 through 5 would be 1, 3, 5, 7, and 9 respectively
#   Since difficulty is not included in this formula, it will not affect the stat values at all.
#   i.e. A level 3 Ominous Wither in Easy difficulty will have the same "wither power" as a level 3 Ominous Wither in Hard difficulty.
#
# There are two additional optional components: `level-mapping` and `difficulty-mapping`, both arrays of numbers
#   If `level-mapping` is present, it must be an array of 5 numeric values.
#   If `difficulty-mapping` is present, it must be an array of 3 numeric values.
#   
#   These mappings replace their respective variable in the formula calculation above.
#   The variable's assignment will be used as an index (assuming a 1-based indexing system) to this mapping / lookup table
#   This allows for more custom calculations that can't be easily represented by an expression.
# 
#   Here is an example using a non-existent stat called "wither_reach"
#     wither_reach:
#       formula: "level + 0.5"
#       level-mapping: [0, 0, 3, 7, 20]
#   The resulting "wither_reach" values for Ominous Withers level 1 through 5 would be 0.5, 0.5, 3.5, 7.5, and 20.5 respectively

boss_stats:
  #
  normal_skull_speed:
    formula: "(0.2 * level) + 1.0"
  
  #
  explosive_skull_speed:
    formula: "10.0"

  #
  apocalypse_skull_speed:
    formula: "3.0"

  #
  gravity_skull_speed:
    formula: "5.0"

  #
  dangerous_skull_lifespan:
    formula: "500"

  #
  apocalypse_homing_lifespan:
    formula: "100"

  #
  explosive_skull_power:
    formula: "3.75"

  #
  gravity_radius:
    formula: "6.25"

  #
  gravity_force_intensity:
    formula: "2.0"

  #
  apocalypse_spawn_amount:
    formula: "level"

  # 
  apocalypse_horseman_lifespan:
    formula: "1000"

  #
  dangerous_skull_chance_boost:
    formula: "0.05 * level"

  #
  general_explosion_resistance:
    formula: "0.5"

  #
  end_crystal_resistance:
    formula: "0.8"

  #
  flight_acceleration_distance_threshold:
    formula: "15"

  #
  flight_speed:
    formula: "level"
    level-mapping: [0.0, 0.0, 0.75, 1.5, 10]

  #
  suffocate_teleport_range:
    formula: "10"

  # 
  first_phase_armor:
    formula: "4.0"

  #
  second_phase_armor:
    formula: "7.0 + (level * 3.0)"

  # 
  first_phase_armor_toughness:
    formula: "level * 2"

  #
  second_phase_armor_toughness:
    formula: "level * 4"

  #
  skull_barrage_amount:
    formula: "level"
    level-mapping: [3, 3, 3, 5, 5]

  #
  boss_max_health:
    formula: "150 * (difficulty + 1)"

  #
  minion_amount:
    formula: "10"

  #
  minion_spawn_range:
    formula: "10"

  #
  minion_armor:
    formula: "level * 2.0"

  #
  minion_armor_toughness:
    formula: "level"

  #
  minion_movement_speed:
    formula: "0.375"

  #
  minion_sword_sharpness:
    formula: "level"