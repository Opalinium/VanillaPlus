###############################
#    OMINOUS WITHER CONFIG    #
###############################


###############################
#    BOSS SETTINGS SECTION    #
###############################

# This is a collection of different settings that pertain to the Ominous Wither's stats
# These values essentially control how strong it is and how strong each of its moves are

# Each setting is represented by a list of modifiers
# Modifiers are an object with the keys:
# [!] type: the metric to depend on for this modifier
# [!] value: numeric scalar value to multiply this metric by
# mode: whether to add this scaled value to the values attained by the previous modifiers or to multiply it. Defaults to addition.
# The [!] indicates that the field is requried.

# Valid values for the 'type' field are:
# "base": constant value (1)
# "level": the level of the Ominous Wither in the [1,5] interval
# "difficulty": the difficulty of the world that the Wither is in the [1,3] interval with the mapping {easy: 1, normal: 2, hard: 3}

# Valid values for the 'mode' field are:
# Unset: mode does not exist. Uses "additive"
# "additive": modifier increments value up until this point
# "multiplicative": modifier scales value up until this point

# To explain this whole system a little more concretely, I will give an example
# This is some made-up stat called "wither_power"

# wither_power:
# - {type: "base", value: 1}
# - {type: "level", value: 0.5}
# - {type: "difficulty", value: 2, mode: "multiplicative"}

# This assignment above will evaluate to the mathematical equation
# wither_power = (1 + (0.5 * level)) * (2 * difficulty)
# Or if you prefer single letter variables: W(L, D) = (1 + 0.5L) * 2D

# Please note that this does not follow order of operations. Each new modifier should assume that all calculations done before it have already been done.
# (i.e. as if there was a parentheses placed around all previous calculations)

# See the example below:

# wither_power:
# - {type: "base", value: 1}
# - {type: "level", value: 0.5}
# - {type: "difficulty", value: 2, mode: "multiplicative"}
# - {type: "base", value: 5}

# This assignment above will evaluate to the mathematical equation
# wither_power = ((1 + (0.5 * level)) * (2 * difficulty)) + 5
# Of if you prefer single letter variables: W(L, D) = ((1 + 0.5L) * 2D) + 5

boss_settings:
  #
  normal_skull_speed:
  - {type: "base", value: 1.0}
  - {type: "level", value: 0.2}
  
  #
  explosive_skull_speed:
  - {type: "base", value: 10.0}

  #
  apocalypse_skull_speed:
  - {type: "base", value: 3.0}

  #
  gravity_skull_speed:
  - {type: "base", value: 5.0}

  #
  dangerous_skull_lifespan:
  - {type: "base", value: 500}

  #
  apocalypse_homing_lifespan:
  - {type: "base", value: 100}

  #
  explosive_skull_power:
  - {type: "base", value: 3.75}

  #
  gravity_radius:
  - {type: "base", value: 6.25}

  #
  gravity_force_intensity:
  - {type: "base", value: 2.0}

  #
  apocalypse_spawn_amount:
  - {type: "level", value: 1}

  # 
  apocalypse_horseman_lifespan:
  - {type: "base", value: 1000}

  #
  dangerous_skull_chance_boost:
  - {type: "level", value: 0.05}

  #
  general_explosion_resistance:
  - {type: "base", value: 0.8}

  #
  end_crystal_resistance:
  - {type: "base", value: 0.5}

  #
  flight_acceleration_distance_threshold:
  - {type: "base", value: 15}

  #
  flight_speed:
  - {type: "level", value: 0.125}
  - {type: "base", value: -0.75}
  - {type: "level", value: 1, mode: "multiplicative"}
  - {type: "base", value: 1.5}
  - {type: "level", value: 1, mode: "multiplicative"}
  - {type: "base", value: -0.625}


  suffocate_teleport_range:
  - {type: "base", value: 1}


  first_phase_armor:
  - {type: "base", value: 1}


  second_phase_armor:
  - {type: "base", value: 1}


  first_phase_armor_toughness:
  - {type: "base", value: 1}


  second_phase_armor_toughness:
  - {type: "base", value: 1}

  #
  skull_barrage_amount:
  - {type: "base", value: 1}
  - {type: "level", value: 1}


  boss_max_health:
  - {type: "base", value: 1}


  minion_amount:
  - {type: "base", value: 1}


  minion_spawn_range:
  - {type: "base", value: 1}


  minion_armor:
  - {type: "base", value: 1}


  minion_armor_toughness:
  - {type: "base", value: 1}


  minion_movement_speed:
  - {type: "base", value: 1}


  minion_sword_sharpness:
  - {type: "base", value: 1}